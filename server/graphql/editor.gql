
input OldId{
  mod:String!
  id:String!
}

input ItemInput {
  # Metadata settings
  #meta: [Meta]
  #flags: ItemFlags

  # Mod this object comes from
  mod: String!

  # Id of this object, combined with mod in format mod:id
  id: String!

  # English name of object
  name: String!

  # Version this object first appeared in
  introduced_at: String!

  # Last Version this object was edited
  changed_at: String!
}

input BlockInput {
  # Metadata settings
  #meta: [Meta]
  #flags: ItemFlags

  # Mod this object comes from
  mod: String!

  # Id of this object, combined with mod in format mod:id
  id: String!

  # English name of object
  name: String!

  # Version this object first appeared in
  introduced_at: String!

  # Last Version this object was edited
  changed_at: String!

  meta: [InputMeta]
  flags: InputBlockFlags

}

input InputMeta {
  key: String
  values: [InputMetaEntry]
  technical: Boolean
}

input InputMetaEntry {
  value: String
  mask: Int
}

input InputBlockFlags {
  # Does this block obey physics (sand/gravel/anvil)
  physics: Boolean

  # Resistance to explosions
  hardness: Int

  # Does this block prevent piston movement
  unpushable: Boolean

  # Is this block transparent (no suffocate damage)
  transparent: Boolean
  light: InputBlockFlagsLight
}

input InputBlockFlagsLight {
  # Amount of light emitted by block
  emit: Int

  # Amount of light that is dropped as it passes through this block
  decay: Int
}

type mutation {
  addItem(newData: ItemInput!): Item
  updateItem(oldId: OldId!, newData: ItemInput!): Item
  deleteItem(oldId: OldId!): Item

  addBlock(newData: BlockInput!): Block
  updateBlock(oldId: OldId!, newData: BlockInput!): Block
  deleteBlock(oldId: OldId!): Block
}